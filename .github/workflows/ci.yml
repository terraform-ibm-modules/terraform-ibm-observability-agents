name: CI-Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  call-terraform-ci-pipeline:
    uses: terraform-ibm-modules/common-pipeline-assets/.github/workflows/common-terraform-module-ci.yml@v1.7.3
    secrets: inherit
    with:
      craTarget: "examples/basic"
      craGoalIgnoreFile: "cra-tf-validate-ignore-goals.json"
  release:
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      contents: write
    runs-on: ubuntu-latest
    container:
      image: icr.io/goldeneye_images/goldeneye-ci-image:stable
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        NO_CONTAINER: "true" # set so any Makefile actions will not run in new container
        CATALOG_TEKTON_WEBHOOK_TOKEN: ${{ secrets.CATALOG_TEKTON_WEBHOOK_TOKEN }}
        CATALOG_TEKTON_WEBHOOK_URL: ${{ secrets.CATALOG_TEKTON_WEBHOOK_URL }}
        CATALOG_PUBLISH_APIKEY: ${{ secrets.CATALOG_PUBLISH_APIKEY }}
        CATALOG_VALIDATION_APIKEY: ${{ secrets.CATALOG_VALIDATION_APIKEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: true

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          charts_dir: chart/logdna-agent
        env:
          CR_TOKEN: "${{ secrets.GH_TOKEN }}"
