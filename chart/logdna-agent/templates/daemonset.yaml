apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "{{ .Values.metadata.name }}"
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: "{{ .Values.metadata.name }}"
    app.kubernetes.io/instance: "{{ .Values.metadata.name }}"
    # Extracts the first part before '@' from .Values.image.version, ensuring it's treated as a string.
    app.kubernetes.io/version: {{ .Values.image.version | default "" | toString | splitList "@" | first }}
  annotations:
    {{- range .Values.checkov_skips }}
    {{- . | toYaml | nindent 4 -}}
    {{- end }}
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
  selector:
    matchLabels:
      app: "{{ .Values.metadata.name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.metadata.name }}"
        app.kubernetes.io/name: "{{ .Values.metadata.name }}"
        app.kubernetes.io/instance: "{{ .Values.metadata.name }}"
        app.kubernetes.io/version: {{ .Values.image.version | default "" | toString | splitList "@" | first }}
    spec:
      serviceAccountName: "{{ .Values.metadata.name }}"
      priorityClassName: "{{ .Values.metadata.name }}-ds-priority"
      initContainers:
        - name: logdna-db-permissions
          image: icr.io/goldeneye_images/ubi8-cluster-tools:stable
          imagePullPolicy: IfNotPresent # Not setting to 'Always' as it can prevent a pod from starting if the image registry can not be reached.
          command: ["sh", "-c", "chmod -R 775 {{.Values.agent.dbPath}} && chown -R 5000:5000 {{.Values.agent.dbPath}}"]
          securityContext:
            privileged: true
            runAsUser: 0 # must run as root to set directory privileges up for agent container
          volumeMounts:
          - name: varliblogdna
            mountPath: {{.Values.agent.dbPath}}
      containers:
        - name: "{{ .Values.metadata.name }}"
          image: '{{ .Values.image.registry }}:{{ required "Agent version must be provided" .Values.image.version }}'
          imagePullPolicy: IfNotPresent # Not setting to 'Always' as it can prevent a pod from starting if the image registry can not be reached.
          securityContext:
            privileged: true
            # run the agent as non-root
            runAsUser: 5000
            runAsGroup: 5000
            capabilities:
              add:
                - DAC_READ_SEARCH
              drop:
                - all
          env:
            - name: LOGDNA_INGESTION_KEY
              valueFrom:
                secretKeyRef:
                  key: logdna-agent-key
                  name: {{ .Values.secret.name }}
            - name: LOGDNA_HOST
              value: {{ .Values.env.host }}
            - name: LOGDNA_LOOKBACK
              value: smallfiles
            {{- if .Values.agent.tags }}
            - name: LOGDNA_TAGS
              value: {{.Values.agent.tags}}
            {{- end }}
            - name: LOGDNA_DB_PATH
              value: {{.Values.agent.dbPath}}
            - name: LOGDNA_REDACT_REGEX
              # regex to redact secret values from logs. The regex is set to match base64-encoded values for each of {"kid":, {"typ":, and {"alg":, respectively.
              value: 'eyJ(?:raWQ|0eXA|hbGc)iOi[^"]+'
            - name: POD_APP_LABEL
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/name']
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            {{- if .Values.agentMetadataLineInclusion }}
            - name: LOGDNA_K8S_METADATA_LINE_INCLUSION
              value: {{ .Values.agentMetadataLineInclusion | quote }}
            {{- end }}
            {{- if .Values.agentMetadataLineExclusion }}
            - name: LOGDNA_K8S_METADATA_LINE_EXCLUSION
              value: {{ .Values.agentMetadataLineExclusion | quote }}
            {{- end }}
          resources:
            requests:
              cpu: 20m
            limits:
              memory: 500Mi
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: vardata
              mountPath: /var/data
            - name: varliblogdna
              mountPath: {{.Values.agent.dbPath}}
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: mnt
              mountPath: /mnt
              readOnly: true
            - name: osrelease
              mountPath: /etc/os-release
            - name: logdnahostname
              mountPath: /etc/logdna-hostname
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: vardata
          hostPath:
            path: /var/data
        - name: varliblogdna
          hostPath:
            path: {{.Values.agent.dbPath}}
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: mnt
          hostPath:
            path: /mnt
        - name: osrelease
          hostPath:
            path: /etc/os-release
        - name: logdnahostname
          hostPath:
            path: /etc/hostname
      tolerations:
      {{- range $val := .Values.tolerations }}
        - effect: {{ $val.effect | quote }}
          key: {{ $val.key | quote }}
          value: {{ $val.value | quote }}
          operator: {{ $val.operator | quote }}
          tolerationSeconds: {{ $val.tolerationSeconds }}
      {{- end}}
